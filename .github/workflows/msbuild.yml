name: MSBuild and Unittests

on:
  push:
    branches:
      - master

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./unittests/unittests.sln
  CMAKE_FILE_PATH: gcc

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  gcc_build:
      runs-on: ubuntu-latest
      
      steps:
      - uses: actions/checkout@v4
      - name: Install dependencies on ubuntu
        run: |
          sudo apt-get update
          sudo apt install libtbb-dev
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          gcc --version
      - name: Configure
        shell: bash
        run: |
          mkdir build
          mkdir instdir
          cmake ${{env.CMAKE_FILE_PATH}} -B build
      - name: Build
        shell: bash
        run: |
          make -C build
      - name: Run
        shell: bash
        run: |
          ./build/octree
  msvc_build_and_test:
    strategy:
      matrix:
        targetplatform: [x86, x64]
        
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}} /p:Platform=${{matrix.targetplatform}}
                
    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1
      
    - name: VSTest
      run: vstest.console.exe /Platform:${{matrix.targetplatform}} ./unittests/!bin/${{matrix.targetplatform}}/${{env.BUILD_CONFIGURATION}}/unittests.dll
